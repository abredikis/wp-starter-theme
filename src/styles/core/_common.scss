@import "_reset";
@import "_mixins";
@import "_variables";
@import "_grid";

:root{
  --col-gap-x: 15px;
  --col-gap-y: 15px;
}

html {
  overflow-x: hidden;
}

body {
  font-weight: 400;
  overflow-x: hidden;

  section {
    max-width: 100%;
  }
}

h1:not([class]), .h1 {
  @include h1();
}

h2:not([class]), .h2 {
  @include h2();
}

h3:not([class]), .h3 {
  @include h3();
}

h4:not([class]), .h4 {
  @include h4();
}

h5:not([class]), .h5 {
  @include h5();
}

strong {
  font-weight: 500;
}

ul, ol {
  &:not([class]) {
    font-size: 18px;
    line-height: 1.5;
    color: inherit;
    margin-top: 15px;
    margin-bottom: 15px;

    @include breakpoint-down($lg) {
      font-size: 16px;
    }
  }
}

ul, ol {
  &:not([class]) {
    padding-left: 25px;

    @include first-last-no-margin();

    li {
      margin-top: 6px;
      margin-bottom: 6px;
    }
  }
}

ul:not([class]) {
  list-style: disc;
}

ol:not([class]) {
  list-style: decimal;
}

a:not([class]) {
  text-decoration: underline;
}

img {
  width: auto;
  height: auto;
  max-width: 100%;
}

.container {
  @include container-padding-x();
  @include container-max-width(1440px);
  margin-left: auto;
  margin-right: auto;
}

.container-fluid {
  @include container-padding-x();
  margin-left: auto;
  margin-right: auto;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--col-gap-y) / 2 * -1) calc(var(--col-gap-x) / 2 * -1);

  & > .col {
    padding-left: calc(var(--col-gap-x) / 2);
    padding-right: calc(var(--col-gap-x) / 2);
    margin-top: calc(var(--col-gap-y) / 2);
    margin-bottom: calc(var(--col-gap-y) / 2);
  }
}

.stretched-link {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 2;
  }
}